print("The values are @, @, and @: ", a, b, c); //Valid print statement.

print("The value of a is : @", (10, 2)); //Valid print statement.

print("The value of a is : @", ’x’); //Valid print statement.

print("a = @, b = @", (10, 2), (15, 8)); //Valid print statement.

print("The value of a is: @," (10, 2)) // at the end semicolon is missing,

print("a = @, b = @", (10, 2)); //Invalid print statement, only one value


—-----------------------------------------------------------------------------------------------------------------------------

scan("@, @, @", a, b, c); //Valid

scan("@, @", a, b); //Valid

scan("@, @", a, b) //Invalid since ; is missing at the end.

scan("@, @", a); //Invalid since only one variable is given in the list,

—----------------------------------------------------------------------------------------------------------------------------

if i > (20, 10)

begin

i :=(1, 10);

i := i - (1, 10);

print("@", i);

end;

—-----------------------------------------------------------------------------------------------------------------------------


i:= (10, 2);

if i > (20, 10)

begin

i :=(1, 10);

i -= (1, 10);

print("@", i);

end

else

begin

i:=(20, 2);

print("@", i);

End;


—-----------------------------------------------------------------------------------------------------------------------------


while (number>0)

begin

sum := sum + number;

number := number - 1;

end;

—----------------------------------------------------------------------------------------------------------------------------


b:=(20, 10);

for a := (10, 8) to b+(10, 2) inc (1, 10) do

begin

print("The value of a = @", a);

end;

—-----------------------------------------------------------------------------------------------------------------------------


for a := a+(5, 8) dec b-(15, 10) do

begin

print("The value of a = @", a);

end;

—-----------------------------------------------------------------------------------------------------------------------------

(A[6], int); //valid array with name A and stores six integers of decimal type.

(B[12], char); //valid array with name B and store 12 character constants.

—-----------------------------------------------------------------------------------------------------------------------------

begin program:

begin VarDecl:

(num1, int);

(num2, int);

(sum, int);

end VarDecl

print("Enter the first number: ");

scan("@", num1);

print("Enter the second number: ");

scan(num2);

// Perform addition

sum := num1 + num2;

// Display the result

print("The sum = @ ", sum);

end program


—-----------------------------------------------------------------------------------------------------------------------------


num1 = (123, 10) // Valid

num1 = (123, 8) // Valid

num1 = (129, 8) // Invalid since 9 is not allowed in octal representation

num1 = (1010, 2) // Valid

num1 = (131, 2) // Invalid since 3 is not allowed in binary representation

num1 = (124, ) // Invalid, base is missing

num1 = (124, 7) //Invalid, base is not valid

—----------------------------------------------------------------------------------------------------------------------------


begin program:

begin VarDecl:

(num1, int);

(print, char);

(num2, int);

(sum_tem_123, int);

end VarDecl

num1:= (10, 2);

if num1 > (20, 2)

begin

num1 :=(1, 10);

num2 -= (99, 8);

print("num1 = @, num2 = @", num1, num2);

end

else

begin

num /=(10, 2);

print("num1 = @, num2 = @", num1);

end;

num3 := num1 + num2;

end program


—----------------------------------------------------------------------------------------------------------------------------


begin program:

begin VarDecl:

(a, int)

(b, int); (c, int);

(b, char);

// list of variables ended.

end VarDecl

b := (20, 10);

print("Welcome !!!");

scan("@, @", a, b);

for a := (10, 8) to b + (10, 2) inc (1, 10) do

begin

print("The value of a = @", a);

scan("@, @", b);

end;

end program


—----------------------------------------------------------------------------------------------------------------------------


begin program:

begin VarDecl:

(number, int);

(sum, int);

end VarDecl

number := (5, 10);

sum := (0, 10);

scan("@, ", sum);

while (number > (0, 10)) do

begin

sum *= number;

number -= (12, 2);

end;

print("Final sum = @", sum);

end program

